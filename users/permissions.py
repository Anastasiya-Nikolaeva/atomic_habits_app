from rest_framework.permissions import BasePermission


class IsOwner(BasePermission):
    """
    Проверка, является ли пользователь владельцем объекта.

    Этот класс разрешает доступ к объекту только в том случае, если
    текущий пользователь является владельцем данного объекта.
    """

    def has_object_permission(self, request, view, obj):
        """
        Проверяет, имеет ли пользователь разрешение на доступ к объекту.

        Параметры:
        request (Request): HTTP-запрос.
        view (View): Представление, обрабатывающее запрос.
        obj (Model): Объект, к которому проверяется доступ.

        Возвращает:
        bool: True, если пользователь является владельцем объекта, иначе False.
        """
        return obj.owner == request.user


class IsUserProfile(BasePermission):
    """
    Проверка, является ли объект профилем текущего пользователя.

    Этот класс разрешает доступ к объекту только в том случае, если
    текущий пользователь пытается получить доступ к своему собственному профилю.
    """

    def has_object_permission(self, request, view, obj):
        """
        Проверяет, является ли объект профилем текущего пользователя.

        Параметры:
        request (Request): HTTP-запрос.
        view (View): Представление, обрабатывающее запрос.
        obj (Model): Объект профиля, к которому проверяется доступ.

        Возвращает:
        bool: True, если объект является профилем текущего пользователя, иначе False.
        """
        return request.user.id == obj.id
